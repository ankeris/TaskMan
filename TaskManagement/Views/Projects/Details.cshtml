@model ProjectDetailsViewModel

@{
    ViewData["Title"] = "Details";
}

<h2>@Model.Project.ProjectName</h2>
@if (@ViewBag.DeletedMessage != null)
{
    <h1>@ViewBag.DeletedMessage</h1>
}
<a asp-action="Index">Go back</a>
<section class="content-section split-window">
    <div class="split-window window__left">
        <h4>@Model.Project.ProjectName</h4>
        <ul class="task-box">
            @{int i = 1;}
            @foreach (TaskManagement.Models.Task t in Model.Tasks)
            {
                <li>
                    <span>@i </span>
                    <span>
                        <a asp-controller="Tasks"
                           asp-action="Details"
                           asp-route-id="@t.TaskId">@t.TaskName</a>
                    </span>
                    <a asp-controller="Tasks"
                       asp-action="Delete"
                       asp-route-id="@t.TaskId">
                        <b>[x]</b>
                    </a>
                </li>
                i++;
            }
        </ul>
    </div>
    <div class="split-window window__right">
        <ul class="information-box">
            <li>Progress: @Model.Project.DoneTasks task(s) done out of @Model.Project.TotalTasks</li>
            <li>Deadline: @Model.Project.ProjectDeadline</li>
            <li>Description:</li>
            <li>Comments</li>
            @*<partial name="_CommentCreate" view-data="ViewData" />*@
            @await Component.InvokeAsync("CommentCreate", new {
               id = Model.Project.ProjectId,
               commentOn = "Project"
            })
            @await Html.PartialAsync("_CommentSection", Model.Comments)
        </ul>
    </div>
</section>

<div>
    @*<a asp-action="Edit" asp-route-id="@Model.Project.ProjectId">Edit</a> |*@
    <a asp-controller="Tasks" asp-action="Create" asp-route-id="@Model.Project.ProjectId">Add Task</a>
</div>
